use ethers::types::H256;
use std::collections::{HashMap, VecDeque};

pub struct ForkInfo {
    pub height: u64,
        pub depth: u64,
            pub competing_blocks: usize,
                pub active_forks: usize,
                }

                pub struct ForkDetector {
                    // Map of block height -> list of block hashes at that height
                        blocks_at_height: HashMap<u64, Vec<H256>>,
                            // Map of block hash -> parent hash
                                parent_map: HashMap<H256, H256>,
                                    // Keep last N blocks
                                        max_history: usize,
                                            // Track canonical chain
                                                canonical_chain: VecDeque<(u64, H256)>,
                                                }

                                                impl ForkDetector {
                                                    pub fn new(max_history: usize) -> Self {
                                                            Self {
                                                                        blocks_at_height: HashMap::new(),
                                                                                    parent_map: HashMap::new(),
                                                                                                max_history,
                                                                                                            canonical_chain: VecDeque::new(),
                                                                                                                    }
                                                                                                                        }

                                                                                                                            pub fn add_block(
                                                                                                                                    &mut self,
                                                                                                                                            height: u64,
                                                                                                                                                    block_hash: H256,
                                                                                                                                                            parent_hash: H256,
                                                                                                                                                                ) -> Option<ForkInfo> {
                                                                                                                                                                        // Store parent relationship
                                                                                                                                                                                self.parent_map.insert(block_hash, parent_hash);

                                                                                                                                                                                        // Get blocks at this height
                                                                                                                                                                                                let blocks = self.blocks_at_height.entry(height).or_insert_with(Vec::new);
                                                                                                                                                                                                        
                                                                                                                                                                                                                // Check if we already have this block
                                                                                                                                                                                                                        if blocks.contains(&block_hash) {
                                                                                                                                                                                                                                    return None;
                                                                                                                                                                                                                                            }

                                                                                                                                                                                                                                                    blocks.push(block_hash);

                                                                                                                                                                                                                                                            // Update canonical chain
                                                                                                                                                                                                                                                                    self.canonical_chain.push_back((height, block_hash));
                                                                                                                                                                                                                                                                            if self.canonical_chain.len() > self.max_history {
                                                                                                                                                                                                                                                                                        if let Some((old_height, _)) = self.canonical_chain.pop_front() {
                                                                                                                                                                                                                                                                                                        self.blocks_at_height.remove(&old_height);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                            }

                                                                                                                                                                                                                                                                                                                                    // Detect fork
                                                                                                                                                                                                                                                                                                                                            if blocks.len() > 1 {
                                                                                                                                                                                                                                                                                                                                                        let depth = self.calculate_fork_depth(height, &blocks[0], block_hash);
                                                                                                                                                                                                                                                                                                                                                                    let active_forks = self.count_active_forks();

                                                                                                                                                                                                                                                                                                                                                                                Some(ForkInfo {
                                                                                                                                                                                                                                                                                                                                                                                                height,
                                                                                                                                                                                                                                                                                                                                                                                                                depth,
                                                                                                                                                                                                                                                                                                                                                                                                                                competing_blocks: blocks.len(),
                                                                                                                                                                                                                                                                                                                                                                                                                                                active_forks,
                                                                                                                                                                                                                                                                                                                                                                                                                                                            })
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                None
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                fn calculate_fork_depth(&self, _height: u64, hash1: &H256, hash2: H256) -> u64 {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        let mut depth = 0;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                let mut current1 = *hash1;
let mut current2 = hash2;

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // Walk back until we find common ancestor
for _ in 0..self.max_history {
if current1 == current2 {
return depth;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }

match (self.parent_map.get(&current1), self.parent_map.get(&current2)) {
ome(&p1), Some(&p2)) => {
current1 = p1;
current2 = p2;
depth += 1;
}
break,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
}

depth
}

fn count_active_forks(&self) -> usize {
self.blocks_at_height
values()
filter(|blocks| blocks.len() > 1)
count()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
}
